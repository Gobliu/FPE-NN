import numpy as np
import matplotlib.pyplot as plt

# OU
# g1 = np.load('/home/liuwei/Cluster/OU/id1_p10_win1313_3/iter136_gg_ng.npy')
# h1 = np.load('/home/liuwei/Cluster/OU/id1_p10_win1313_3/iter136_hh_ng.npy')
# g3 = np.load('/home/liuwei/Cluster/OU/id1_p10_win1313_4/iter119_gg_ng.npy')
# h3 = np.load('/home/liuwei/Cluster/OU/id1_p10_win1313_4/iter119_hh_ng.npy')
# g5 = np.load('/home/liuwei/Cluster/OU/id1_p10_win1313_2/iter127_gg_ng.npy')
# h5 = np.load('/home/liuwei/Cluster/OU/id1_p10_win1313_2/iter127_hh_ng.npy')

x1 = np.linspace(-0.01, 0.1, num=110, endpoint=False)
OU_real_g = 2.86 * x1
OU_real_h = 0.0013 * np.ones(x1.shape)

# Bessel
g1 = np.load('/home/liuwei/Cluster/Bessel/id10_p10_win1313_2/iter73_gg_ng.npy')
h1 = np.load('/home/liuwei/Cluster/Bessel/id10_p10_win1313_2/iter73_hh_ng.npy')
g3 = np.load('/home/liuwei/GitHub/Result/Bessel/id12_p10_win1717_0/iter152_gg_ng.npy')
h3 = np.load('/home/liuwei/GitHub/Result/Bessel/id12_p10_win1717_0/iter152_hh_ng.npy')
g5 = np.load('/home/liuwei/Cluster/Bessel/id12_p10_win1313_0/iter109_gg_ng.npy')
h5 = np.load('/home/liuwei/Cluster/Bessel/id12_p10_win1313_0/iter109_hh_ng.npy')

x2 = np.linspace(0.1, 1.1, num=100, endpoint=False)
B_real_g = 1 / x2 - 0.2
B_real_h = 0.5 * np.ones(x2.shape)

print(np.sum((g1 - B_real_g)**2)/np.sum(B_real_g**2),
      np.sum((h1 - B_real_h)**2)/np.sum(B_real_h**2))

print(np.sum((g3 - B_real_g)**2)/np.sum(B_real_g**2),
      np.sum((h3 - B_real_h)**2)/np.sum(B_real_h**2))
# # Boltz
# # g1 = np.load('/home/liuwei/Cluster/Boltz/id1_p10_win1313_2/iter124_gg_ng.npy')
# # h1 = np.load('/home/liuwei/Cluster/Boltz/id1_p10_win1313_2/iter124_hh_ng.npy')
# g1 = np.load('/home/liuwei/GitHub/Result/Boltz/id1_p10_win1313_1/iter300_gg_ng.npy')
# h1 = np.load('/home/liuwei/GitHub/Result/Boltz/id1_p10_win1313_1/iter300_hh_ng.npy')
# g3 = np.load('/home/liuwei/GitHub/Result/Boltz/id1_p10_win1313_3/iter92_gg_ng.npy')
# h3 = np.load('/home/liuwei/GitHub/Result/Boltz/id1_p10_win1313_3/iter92_hh_ng.npy')
# g5 = np.load('/home/liuwei/Cluster/Boltz/id1_p10_win1313_5/iter108_gg_ng.npy')
# h5 = np.load('/home/liuwei/Cluster/Boltz/id1_p10_win1313_5/iter108_hh_ng.npy')

x3 = np.linspace(0., 1., num=100, endpoint=False)
Boltz_real_g = x3 - 1
Boltz_real_h = 0.2 * x3 ** 2

# plt.figure(figsize=[16, 18])
# plt.subplots_adjust(top=0.95, bottom=0.1, left=0.075, right=0.95, wspace=0.25, hspace=0.2)
# ax = plt.subplot(1, 2, 1)
# # plt.text(-0.1, 1.10, 'A', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
# plt.plot(x1, OU_real_g, linewidth=3, label='Ture')
# plt.plot(x1, g1, linewidth=3, label='1% noise')
# plt.plot(x1, g3, linewidth=3, label='3% noise')
# plt.plot(x1, g5, linewidth=3, label='5% noise')
# # plt.scatter(interval, y=0.035 * np.ones((len(interval))))
# plt.tick_params(direction='in', width=3, length=6)
# # plt.xticks(fontweight='bold')
# # # plt.ylim(-0.1, 0.4)
# plt.ticklabel_format(axis="y", style="sci", scilimits=(0, 0))
# # plt.yticks(np.arange(0.005, 0.018, 0.003))
# plt.legend(loc='upper left', bbox_to_anchor=[0.4, 0.92], ncol=1)
# # ax.text(.5, .9, '$\mathbf{g_{error}}$', horizontalalignment='center', transform=ax.transAxes, fontsize=20)
# plt.ylabel('$\mathbf{L_{gh}}$', fontweight='bold')
# plt.xlabel('iter',  fontweight='bold')
#
# ax = plt.subplot(1, 2, 2)
# # plt.text(-0.1, 1.10, 'A', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
# plt.plot(x1, OU_real_h, linewidth=3, label='Ture')
# plt.plot(x1, h1, linewidth=3, label='1% noise')
# plt.plot(x1, h3, linewidth=3, label='3% noise')
# plt.plot(x1, h5, linewidth=3, label='5% noise')
# # plt.scatter(interval, y=0.035 * np.ones((len(interval))))
# plt.tick_params(direction='in', width=3, length=6)
# # plt.xticks(fontweight='bold')
# # # plt.ylim(-0.1, 0.4)
# plt.ticklabel_format(axis="y", style="sci", scilimits=(0, 0))
# # plt.yticks(np.arange(0.005, 0.018, 0.003))
# plt.legend(loc='upper left', bbox_to_anchor=[0.4, 0.92], ncol=1)
# # ax.text(.5, .9, '$\mathbf{g_{error}}$', horizontalalignment='center', transform=ax.transAxes, fontsize=20)
# plt.ylabel('$\mathbf{L_{gh}}$', fontweight='bold')
# plt.xlabel('iter',  fontweight='bold')
# plt.show()

plt.figure(figsize=[16, 18])
plt.subplots_adjust(top=0.95, bottom=0.1, left=0.075, right=0.95, wspace=0.25, hspace=0.2)
ax = plt.subplot(1, 2, 1)
# plt.text(-0.1, 1.10, 'A', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
plt.plot(x2, B_real_g, linewidth=3, label='Ture')
plt.plot(x2, g1, linewidth=3, label='1% noise')
plt.plot(x2, g3, linewidth=3, label='3% noise')
# plt.plot(x2, g5, linewidth=3, label='5% noise')
# plt.scatter(interval, y=0.035 * np.ones((len(interval))))
plt.tick_params(direction='in', width=3, length=6)
# plt.xticks(fontweight='bold')
# # plt.ylim(-0.1, 0.4)
plt.ticklabel_format(axis="y", style="sci", scilimits=(0, 0))
# plt.yticks(np.arange(0.005, 0.018, 0.003))
plt.legend(loc='upper left', bbox_to_anchor=[0.4, 0.92], ncol=1)
# ax.text(.5, .9, '$\mathbf{g_{error}}$', horizontalalignment='center', transform=ax.transAxes, fontsize=20)
plt.ylabel('$\mathbf{L_{gh}}$', fontweight='bold')
plt.xlabel('iter',  fontweight='bold')

ax = plt.subplot(1, 2, 2)
# plt.text(-0.1, 1.10, 'A', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
plt.plot(x2, B_real_h, linewidth=3, label='Ture')
plt.plot(x2, h1, linewidth=3, label='1% noise')
plt.plot(x2, h3, linewidth=3, label='3% noise')
# plt.plot(x2, h5, linewidth=3, label='5% noise')
# plt.scatter(interval, y=0.035 * np.ones((len(interval))))
plt.tick_params(direction='in', width=3, length=6)
# plt.xticks(fontweight='bold')
# # plt.ylim(-0.1, 0.4)
plt.ticklabel_format(axis="y", style="sci", scilimits=(0, 0))
# plt.yticks(np.arange(0.005, 0.018, 0.003))
plt.legend(loc='upper left', bbox_to_anchor=[0.4, 0.92], ncol=1)
# ax.text(.5, .9, '$\mathbf{g_{error}}$', horizontalalignment='center', transform=ax.transAxes, fontsize=20)
plt.ylabel('$\mathbf{L_{gh}}$', fontweight='bold')
plt.xlabel('iter',  fontweight='bold')
plt.show()

# plt.figure(figsize=[16, 18])
# plt.subplots_adjust(top=0.95, bottom=0.1, left=0.075, right=0.95, wspace=0.25, hspace=0.2)
# ax = plt.subplot(1, 2, 1)
# # plt.text(-0.1, 1.10, 'A', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
# plt.plot(x3, Boltz_real_g, linewidth=3, label='Ture')
# plt.plot(x3, g1, linewidth=3, label='1% noise')
# plt.plot(x3, g3, linewidth=3, label='3% noise')
# plt.plot(x3, g5, linewidth=3, label='5% noise')
# # plt.scatter(interval, y=0.035 * np.ones((len(interval))))
# plt.tick_params(direction='in', width=3, length=6)
# # plt.xticks(fontweight='bold')
# # # plt.ylim(-0.1, 0.4)
# plt.ticklabel_format(axis="y", style="sci", scilimits=(0, 0))
# # plt.yticks(np.arange(0.005, 0.018, 0.003))
# plt.legend(loc='upper left', bbox_to_anchor=[0.4, 0.92], ncol=1)
# # ax.text(.5, .9, '$\mathbf{g_{error}}$', horizontalalignment='center', transform=ax.transAxes, fontsize=20)
# plt.ylabel('$\mathbf{L_{gh}}$', fontweight='bold')
# plt.xlabel('iter',  fontweight='bold')
#
# ax = plt.subplot(1, 2, 2)
# # plt.text(-0.1, 1.10, 'A', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
# plt.plot(x3, Boltz_real_h, linewidth=3, label='Ture')
# plt.plot(x3, h1, linewidth=3, label='1% noise')
# plt.plot(x3, h3, linewidth=3, label='3% noise')
# plt.plot(x3, h5, linewidth=3, label='5% noise')
# # plt.scatter(interval, y=0.035 * np.ones((len(interval))))
# plt.tick_params(direction='in', width=3, length=6)
# # plt.xticks(fontweight='bold')
# # # plt.ylim(-0.1, 0.4)
# plt.ticklabel_format(axis="y", style="sci", scilimits=(0, 0))
# # plt.yticks(np.arange(0.005, 0.018, 0.003))
# plt.legend(loc='upper left', bbox_to_anchor=[0.4, 0.92], ncol=1)
# # ax.text(.5, .9, '$\mathbf{g_{error}}$', horizontalalignment='center', transform=ax.transAxes, fontsize=20)
# plt.ylabel('$\mathbf{L_{gh}}$', fontweight='bold')
# plt.xlabel('iter',  fontweight='bold')
# plt.show()


