import math
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rc
import sys

# rc('text', usetex=True)
font = {'size': 18}
plt.rc('font', **font)
plt.rc('axes', linewidth=2)
legend_properties = {'weight': 'bold'}

OU_g = np.load('/home/liuwei/GitHub/Result/gh_only/OU/id2016_p20_win3_5/gg_smooth.npy')
OU_h = np.load('/home/liuwei/GitHub/Result/gh_only/OU/id2016_p20_win3_5/hh_smooth.npy')
B_g = np.load('/home/liuwei/GitHub/Result/gh_only/Bessel/id2016_p20_win3_3/gg_smooth.npy')
B_h = np.load('/home/liuwei/GitHub/Result/gh_only/Bessel/id2016_p20_win3_3/hh_smooth.npy')
Boltz_g = np.load('/home/liuwei/GitHub/Result/gh_only/Boltz/id2017_p20_win3_6/gg_smooth.npy')
Boltz_h = np.load('/home/liuwei/GitHub/Result/gh_only/Boltz/id2017_p20_win3_6/hh_smooth.npy')

x1 = np.linspace(-0.01, 0.1, num=110, endpoint=False)
OU_real_g = 2.86 * x1
OU_real_h = 0.0013 * np.ones(x1.shape)
x2 = np.linspace(0.1, 1.1, num=100, endpoint=False)
B_real_g = 1 / x2 - 0.2
B_real_h = 0.5 * np.ones(x2.shape)
x3 = np.linspace(0., 1., num=100, endpoint=False)
Boltz_real_g = x3 - 1
Boltz_real_h = 0.2 * x3 ** 2

plt.figure(figsize=[24, 18])
plt.subplots_adjust(top=0.95, bottom=0.1, left=0.075, right=0.95, wspace=0.25, hspace=0.2)
ax = plt.subplot(2, 3, 1)
plt.text(-0.1, 1.10, 'A', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
plt.plot(x1, OU_real_g, 'k-', linewidth=3, label='True')
plt.scatter(x1, OU_g, c='r', marker='d', s=50, label='FPE NN')
# plt.scatter(b_x, b_lsq_g, c='r', marker='d', s=100, label='LLS')
plt.tick_params(direction='in', width=3, length=6)
plt.xticks(np.arange(-0.00, 0.10, 0.03), fontweight='bold')
plt.yticks(fontweight='bold')
# plt.ylim(-0.1, 0.4)
plt.yticks(np.arange(-0.05, 0.3, 0.1), fontweight='bold')
plt.legend(loc='upper left', bbox_to_anchor=[0.05, 0.85], ncol=1)
ax.text(.5, .9, 'OU', horizontalalignment='center', transform=ax.transAxes, fontweight='bold')
plt.ylabel('g',  fontweight='bold')
plt.xlabel('x',  fontweight='bold')

ax = plt.subplot(2, 3, 4)
plt.text(-0.1, 1.10, 'D', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
plt.plot(x1, OU_real_h * 1000, 'k-', linewidth=3, label='True')
plt.scatter(x1, OU_h * 1000, c='r', marker='d', s=50, label='FPE NN')
# plt.scatter(b_x, b_lsq_g, c='r', marker='d', s=100, label='LLS')
plt.tick_params(direction='in', width=3, length=6)
plt.xticks(np.arange(-0.00, 0.10, 0.03), fontweight='bold')
plt.yticks(fontweight='bold')
# plt.ylim(1.29, 1.31)
plt.ylim(1.2895, 1.3105)
plt.yticks(np.arange(1.29, 1.315, 0.01), fontweight='bold')
plt.legend(loc='upper left', bbox_to_anchor=[0.05, 0.85], ncol=1)
ax.text(.5, .9, 'OU', horizontalalignment='center', transform=ax.transAxes, fontweight='bold')
plt.ylabel('h(1E-4)',  fontweight='bold')
plt.xlabel('x',  fontweight='bold')

ax = plt.subplot(2, 3, 2)
plt.text(-0.1, 1.10, 'B', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
plt.plot(x2, B_real_g, 'k-', linewidth=3, label='True')
plt.scatter(x2, B_g, c='r', marker='d', s=50, label='FPE NN')
# plt.scatter(b_x, b_lsq_g, c='r', marker='d', s=100, label='LLS')
plt.tick_params(direction='in', width=3, length=6)
plt.xticks(np.arange(0.10, 1.11, 0.5), fontweight='bold')
plt.yticks(fontweight='bold')
plt.legend(loc='upper left', bbox_to_anchor=[0.55, 0.85], ncol=1)
ax.text(.5, .9, 'Bessel', horizontalalignment='center', transform=ax.transAxes, fontweight='bold')
plt.ylabel('g',  fontweight='bold')
plt.xlabel('x',  fontweight='bold')

ax = plt.subplot(2, 3, 5)
plt.text(-0.1, 1.10, 'E', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
plt.plot(x2, B_real_h * 10, 'k-', linewidth=3, label='True')
plt.scatter(x2, B_h * 10, c='r', marker='d', s=50, label='FPE NN')
# plt.scatter(b_x, b_lsq_g, c='r', marker='d', s=100, label='LLS')
plt.tick_params(direction='in', width=3, length=6)
plt.xticks(np.arange(0.10, 1.11, 0.5), fontweight='bold')
plt.yticks(fontweight='bold')
plt.ylim(4.995, 5.011)
plt.yticks(np.arange(5.00, 5.02, 0.01), fontweight='bold')
plt.legend(loc='upper left', bbox_to_anchor=[0.55, 0.85], ncol=1)
ax.text(.5, .9, 'Bessel', horizontalalignment='center', transform=ax.transAxes, fontweight='bold')
plt.ylabel('h (1E-1)',  fontweight='bold')
plt.xlabel('x',  fontweight='bold')

ax = plt.subplot(2, 3, 3)
plt.text(-0.1, 1.10, 'C', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
plt.plot(x3, Boltz_real_g, 'k-', linewidth=3, label='True')
plt.scatter(x3, Boltz_g, c='r', marker='d', s=50, label='FPE NN')
# plt.scatter(b_x, b_lsq_g, c='r', marker='d', s=100, label='LLS')
plt.tick_params(direction='in', width=3, length=6)
plt.xticks(np.arange(0.00, 1.10, 0.5), fontweight='bold')
plt.ylim(-1.2, 0.5)
plt.yticks(np.arange(-1.00, 0.6, 0.4), fontweight='bold')
plt.legend(loc='upper left', bbox_to_anchor=[0.05, 0.85], ncol=1)
ax.text(.5, .9, 'Wealth', horizontalalignment='center', transform=ax.transAxes, fontweight='bold')
plt.ylabel('g',  fontweight='bold')
plt.xlabel('x',  fontweight='bold')

ax = plt.subplot(2, 3, 6)
plt.text(-0.1, 1.10, 'F', fontsize=20, transform=ax.transAxes, fontweight='bold', va='top')
plt.plot(x3, Boltz_real_h * 10, 'k-', linewidth=3, label='True')
plt.scatter(x3, Boltz_h * 10, c='r', marker='d', s=50, label='FPE NN')
# plt.scatter(b_x, b_lsq_g, c='r', marker='d', s=100, label='LLS')
plt.tick_params(direction='in', width=3, length=6)
plt.xticks(np.arange(0.00, 1.10, 0.5), fontweight='bold')
plt.yticks(fontweight='bold')
plt.ylim(-0.2, 2.5)
plt.yticks(np.arange(0.00, 2.02, 1), fontweight='bold')
plt.legend(loc='upper left', bbox_to_anchor=[0.05, 0.85], ncol=1)
ax.text(.5, .9, 'Wealth', horizontalalignment='center', transform=ax.transAxes, fontweight='bold')
plt.ylabel('h (1E-1)',  fontweight='bold')
plt.xlabel('x',  fontweight='bold')
plt.show()

print(np.sum((OU_g - OU_real_g)**2)/np.sum(OU_real_g**2))
print(np.sum((OU_h - OU_real_h)**2)/np.sum(OU_real_h**2))
print(np.sum((B_g - B_real_g)**2)/np.sum(B_real_g**2))
print(np.sum((B_h - B_real_h)**2)/np.sum(B_real_h**2))
print(np.sum((Boltz_g - Boltz_real_g)**2)/np.sum(Boltz_real_g**2))
print(np.sum((Boltz_h - Boltz_real_h)**2)/np.sum(Boltz_real_h**2))
# print(B_h)
